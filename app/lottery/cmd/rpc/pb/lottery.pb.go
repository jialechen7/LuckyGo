// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.4
// source: app/lottery/cmd/rpc/pb/lottery.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Lottery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Thumb         string `protobuf:"bytes,4,opt,name=thumb,proto3" json:"thumb,omitempty"`
	PublishTime   int64  `protobuf:"varint,5,opt,name=publishTime,proto3" json:"publishTime,omitempty"`
	JoinNumber    int64  `protobuf:"varint,6,opt,name=joinNumber,proto3" json:"joinNumber,omitempty"`
	Introduce     string `protobuf:"bytes,7,opt,name=introduce,proto3" json:"introduce,omitempty"`
	AwardDeadline int64  `protobuf:"varint,8,opt,name=awardDeadline,proto3" json:"awardDeadline,omitempty"`
	IsSelected    int64  `protobuf:"varint,9,opt,name=isSelected,proto3" json:"isSelected,omitempty"`
	AnnounceType  int64  `protobuf:"varint,10,opt,name=announceType,proto3" json:"announceType,omitempty"`
	AnnounceTime  int64  `protobuf:"varint,11,opt,name=announceTime,proto3" json:"announceTime,omitempty"`
	IsAnnounced   int64  `protobuf:"varint,12,opt,name=isAnnounced,proto3" json:"isAnnounced,omitempty"`
	SponsorId     int64  `protobuf:"varint,13,opt,name=SponsorId,proto3" json:"SponsorId,omitempty"`
}

func (x *Lottery) Reset() {
	*x = Lottery{}
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lottery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lottery) ProtoMessage() {}

func (x *Lottery) ProtoReflect() protoreflect.Message {
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lottery.ProtoReflect.Descriptor instead.
func (*Lottery) Descriptor() ([]byte, []int) {
	return file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescGZIP(), []int{0}
}

func (x *Lottery) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Lottery) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Lottery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lottery) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

func (x *Lottery) GetPublishTime() int64 {
	if x != nil {
		return x.PublishTime
	}
	return 0
}

func (x *Lottery) GetJoinNumber() int64 {
	if x != nil {
		return x.JoinNumber
	}
	return 0
}

func (x *Lottery) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *Lottery) GetAwardDeadline() int64 {
	if x != nil {
		return x.AwardDeadline
	}
	return 0
}

func (x *Lottery) GetIsSelected() int64 {
	if x != nil {
		return x.IsSelected
	}
	return 0
}

func (x *Lottery) GetAnnounceType() int64 {
	if x != nil {
		return x.AnnounceType
	}
	return 0
}

func (x *Lottery) GetAnnounceTime() int64 {
	if x != nil {
		return x.AnnounceTime
	}
	return 0
}

func (x *Lottery) GetIsAnnounced() int64 {
	if x != nil {
		return x.IsAnnounced
	}
	return 0
}

func (x *Lottery) GetSponsorId() int64 {
	if x != nil {
		return x.SponsorId
	}
	return 0
}

type SearchLotteryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                    //page
	Limit         int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                  //limit
	Id            int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                        //id
	UserId        int64  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`                //发起抽奖用户ID
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                     //默认取一等奖名称
	Thumb         string `protobuf:"bytes,6,opt,name=thumb,proto3" json:"thumb,omitempty"`                   //默认取一等经配图
	PublishTime   int64  `protobuf:"varint,7,opt,name=publishTime,proto3" json:"publishTime,omitempty"`      // 发布抽奖时间
	JoinNumber    int64  `protobuf:"varint,8,opt,name=joinNumber,proto3" json:"joinNumber,omitempty"`        //自动开奖人数
	Introduce     string `protobuf:"bytes,9,opt,name=introduce,proto3" json:"introduce,omitempty"`           //抽奖说明
	AwardDeadline int64  `protobuf:"varint,10,opt,name=awardDeadline,proto3" json:"awardDeadline,omitempty"` //领奖截止时间
	CreateTime    int64  `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`       //createTime
	UpdateTime    int64  `protobuf:"varint,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`       //updateTime
	IsSelected    int64  `protobuf:"varint,13,opt,name=isSelected,proto3" json:"isSelected,omitempty"`       //是否精选 1是 0否
	LastId        int64  `protobuf:"varint,14,opt,name=lastId,proto3" json:"lastId,omitempty"`               // 页面最后一条记录的id
	AnnounceType  int64  `protobuf:"varint,15,opt,name=announceType,proto3" json:"announceType,omitempty"`
	AnnounceTime  int64  `protobuf:"varint,16,opt,name=announceTime,proto3" json:"announceTime,omitempty"`
	IsAnnounced   int64  `protobuf:"varint,17,opt,name=isAnnounced,proto3" json:"isAnnounced,omitempty"`
	SponsorId     int64  `protobuf:"varint,18,opt,name=SponsorId,proto3" json:"SponsorId,omitempty"` // 赞助商id
}

func (x *SearchLotteryReq) Reset() {
	*x = SearchLotteryReq{}
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchLotteryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLotteryReq) ProtoMessage() {}

func (x *SearchLotteryReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLotteryReq.ProtoReflect.Descriptor instead.
func (*SearchLotteryReq) Descriptor() ([]byte, []int) {
	return file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescGZIP(), []int{1}
}

func (x *SearchLotteryReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchLotteryReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchLotteryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchLotteryReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchLotteryReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchLotteryReq) GetThumb() string {
	if x != nil {
		return x.Thumb
	}
	return ""
}

func (x *SearchLotteryReq) GetPublishTime() int64 {
	if x != nil {
		return x.PublishTime
	}
	return 0
}

func (x *SearchLotteryReq) GetJoinNumber() int64 {
	if x != nil {
		return x.JoinNumber
	}
	return 0
}

func (x *SearchLotteryReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *SearchLotteryReq) GetAwardDeadline() int64 {
	if x != nil {
		return x.AwardDeadline
	}
	return 0
}

func (x *SearchLotteryReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchLotteryReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchLotteryReq) GetIsSelected() int64 {
	if x != nil {
		return x.IsSelected
	}
	return 0
}

func (x *SearchLotteryReq) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *SearchLotteryReq) GetAnnounceType() int64 {
	if x != nil {
		return x.AnnounceType
	}
	return 0
}

func (x *SearchLotteryReq) GetAnnounceTime() int64 {
	if x != nil {
		return x.AnnounceTime
	}
	return 0
}

func (x *SearchLotteryReq) GetIsAnnounced() int64 {
	if x != nil {
		return x.IsAnnounced
	}
	return 0
}

func (x *SearchLotteryReq) GetSponsorId() int64 {
	if x != nil {
		return x.SponsorId
	}
	return 0
}

type SearchLotteryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Lottery `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //lottery
}

func (x *SearchLotteryResp) Reset() {
	*x = SearchLotteryResp{}
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchLotteryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLotteryResp) ProtoMessage() {}

func (x *SearchLotteryResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLotteryResp.ProtoReflect.Descriptor instead.
func (*SearchLotteryResp) Descriptor() ([]byte, []int) {
	return file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescGZIP(), []int{2}
}

func (x *SearchLotteryResp) GetList() []*Lottery {
	if x != nil {
		return x.List
	}
	return nil
}

type GetLotteryListAfterLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`         // 用户id
	LastId     int64 `protobuf:"varint,2,opt,name=LastId,proto3" json:"LastId,omitempty"`         // 最后一条记录的id
	Limit      int64 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`           // 页码
	Size       int64 `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`             // 每页条数
	IsSelected int64 `protobuf:"varint,5,opt,name=IsSelected,proto3" json:"IsSelected,omitempty"` // 是否精选 1是 0否
}

func (x *GetLotteryListAfterLoginReq) Reset() {
	*x = GetLotteryListAfterLoginReq{}
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLotteryListAfterLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLotteryListAfterLoginReq) ProtoMessage() {}

func (x *GetLotteryListAfterLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLotteryListAfterLoginReq.ProtoReflect.Descriptor instead.
func (*GetLotteryListAfterLoginReq) Descriptor() ([]byte, []int) {
	return file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescGZIP(), []int{3}
}

func (x *GetLotteryListAfterLoginReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetLotteryListAfterLoginReq) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *GetLotteryListAfterLoginReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLotteryListAfterLoginReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetLotteryListAfterLoginReq) GetIsSelected() int64 {
	if x != nil {
		return x.IsSelected
	}
	return 0
}

type GetLotteryListAfterLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Lottery `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 抽奖列表
}

func (x *GetLotteryListAfterLoginResp) Reset() {
	*x = GetLotteryListAfterLoginResp{}
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLotteryListAfterLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLotteryListAfterLoginResp) ProtoMessage() {}

func (x *GetLotteryListAfterLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLotteryListAfterLoginResp.ProtoReflect.Descriptor instead.
func (*GetLotteryListAfterLoginResp) Descriptor() ([]byte, []int) {
	return file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescGZIP(), []int{4}
}

func (x *GetLotteryListAfterLoginResp) GetList() []*Lottery {
	if x != nil {
		return x.List
	}
	return nil
}

var File_app_lottery_cmd_rpc_pb_lottery_proto protoreflect.FileDescriptor

var file_app_lottery_cmd_rpc_pb_lottery_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x70, 0x2f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6d,
	0x64, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x89, 0x03, 0x0a, 0x07, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x6f,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x61, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x73, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x6f, 0x6e,
	0x73, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x70, 0x6f,
	0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x94, 0x04, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x6f, 0x69,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6a,
	0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c,
	0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a,
	0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x61, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x49, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x3f, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xa6,
	0x01, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescOnce sync.Once
	file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescData = file_app_lottery_cmd_rpc_pb_lottery_proto_rawDesc
)

func file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescGZIP() []byte {
	file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescOnce.Do(func() {
		file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescData)
	})
	return file_app_lottery_cmd_rpc_pb_lottery_proto_rawDescData
}

var file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_app_lottery_cmd_rpc_pb_lottery_proto_goTypes = []any{
	(*Lottery)(nil),                      // 0: pb.Lottery
	(*SearchLotteryReq)(nil),             // 1: pb.SearchLotteryReq
	(*SearchLotteryResp)(nil),            // 2: pb.SearchLotteryResp
	(*GetLotteryListAfterLoginReq)(nil),  // 3: pb.GetLotteryListAfterLoginReq
	(*GetLotteryListAfterLoginResp)(nil), // 4: pb.GetLotteryListAfterLoginResp
}
var file_app_lottery_cmd_rpc_pb_lottery_proto_depIdxs = []int32{
	0, // 0: pb.SearchLotteryResp.list:type_name -> pb.Lottery
	0, // 1: pb.GetLotteryListAfterLoginResp.list:type_name -> pb.Lottery
	1, // 2: pb.lottery.SearchLottery:input_type -> pb.SearchLotteryReq
	3, // 3: pb.lottery.GetLotteryListAfterLogin:input_type -> pb.GetLotteryListAfterLoginReq
	2, // 4: pb.lottery.SearchLottery:output_type -> pb.SearchLotteryResp
	4, // 5: pb.lottery.GetLotteryListAfterLogin:output_type -> pb.GetLotteryListAfterLoginResp
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_app_lottery_cmd_rpc_pb_lottery_proto_init() }
func file_app_lottery_cmd_rpc_pb_lottery_proto_init() {
	if File_app_lottery_cmd_rpc_pb_lottery_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_lottery_cmd_rpc_pb_lottery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_lottery_cmd_rpc_pb_lottery_proto_goTypes,
		DependencyIndexes: file_app_lottery_cmd_rpc_pb_lottery_proto_depIdxs,
		MessageInfos:      file_app_lottery_cmd_rpc_pb_lottery_proto_msgTypes,
	}.Build()
	File_app_lottery_cmd_rpc_pb_lottery_proto = out.File
	file_app_lottery_cmd_rpc_pb_lottery_proto_rawDesc = nil
	file_app_lottery_cmd_rpc_pb_lottery_proto_goTypes = nil
	file_app_lottery_cmd_rpc_pb_lottery_proto_depIdxs = nil
}
